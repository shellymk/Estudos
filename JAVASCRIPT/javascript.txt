eu perdi as aulas anteriores entao foi commita a cada estudada que eu der, traumas,

refazendo a aula4
---------------------
scrip e  td mais, mecher webdevelopment

e td mais

/*pra colocar alertas no site, é bem legal*/
   
    alert ('ALERTA DE VIRUS, ALERTA DE VIRUS, ESTE COMPUTADOR ESTA COM SINTOMAS DE AMOR, A MELIANTE SE CHAMA ELIZABETH')

EXPLICANDO:

- O CONFIRM VC FAZ PEREGUNTAS DE SIM OU NAO NO CONSOLE DO NAVEGADOR COMO, DESEJA CONTINUAR NESTA PAGINA E ENCAMINHA A OUTROS POR EXEMPLO

- JA O PROMPT, FAZ PERTGUNTASD ONDE VC POSSA DIGITAR COISAS E Ai encaminha para outros lugares com oq  cv digitou na tela caso 

    confirm ('Esta gostando de javascrpt?')

    window.prompt('Qual seu nome?')

-----------------------------------
	VARIAVEIS:


NO JAVASCRIP, AS VARIAVEIS PODEM SER COLOCADAS COMO

VAR OU LET

ASPA DUPLA, APOSTOTROFO E CRASE, SAO AS FORMAS DE DELIMITAR AS VARIAVEIS


- PODE COMEÇA COM LETRAS SIFRAO OU UNDERLINE

- NAO PODEM COMEÇA COM NUMERO

- É POSSIVEL UISAR LETRAS OU NUM

- É POSSIVEL USAR ACENTO E SIMBOLOS

- NAO PODE TER ESPAÇO

-N PODE SER PALAVRA RESERVADA
------------------------------
NODEJS:

.exit fecha o nodejs

é possivel fzer contas no terminal e ele mostrar a resposta

> var idade = 26
undefined
> var salario =  3500
undefined
> var sexo = "F"
undefined
> idade
26
> salario
3500
> sexo
'F'
> .exit
PS C:\Users\Shelly> .exit
.exit : O termo '.exit' não é reconhecido como nome de cmdlet, função, arquivo de script ou programa operável. Verifique a grafia 
do nome ou, se um caminho tiver sido incluído, veja se o caminho está correto e tente novamente.
No linha:1 caractere:1
+ .exit
+ ~~~~~
    + CategoryInfo          : ObjectNotFound: (.exit:String) [], CommandNotFoundException       
    + FullyQualifiedErrorId : CommandNotFoundException
 
PS C:\Users\Shelly> node    
Welcome to Node.js v18.16.0.      
Type ".help" for more information.
> var n1=8
undefined
> var n2=559
undefined
> n1+n2
567
----------------------------
 tipos:

number: infiny, nan, sao derivados no number

Logicos ou boolean:

Strings : podem ser cpf, numero de cel, rg, porque alem de ter numeros estao compostos tambem por muitos caracteres especiais

null

undefined

object: array derivado de object

------------------------
typeof: isso que aqui basicamemte diz o tipo da variavel dentro do terminal node

exemplo:

> typeof n
'number'
> n="Google"
'Google'
> typeof n
'string'
> typeof 6
'number'
> typeof 6.5
'number'
> typeof "6.5"
'string'
> typeof []
'object'
> typeof {}
'object'
> typeof function(){}
'function'
> typeof undefined
'undefined'
> typeof NaN
'number'
> typeof infinity
'undefined'
> typeof Infinity
'number'
> typeof null
'object'
---------------------------------------------------------
TRATAMENTO DE DADOS:

pra jogar o que eu escrever na tela do pc, é so eu pegar  todo o prompt e colocar desta forma:


Let nome = window.prompt('Qual seu nome?')


onde a variavel nome recebe todo o prompt

depois disso, nos colocamos um alert pra fazer a junçao de tudo um pouco melhor e o nome poder aparecer na tela

pra juntar uma frase a uma variavel usamos o sinal de + que significa concatenaçao 

caso queira juntar mais alguma coisa a , é so concatena novamente colocar as aspas e escrever, assim:


   var nome = window.prompt('Qual o seu nome?')
 

   window.alert ('E um grande prazer te conhecer,' + nome + 'Espero que Goste do curso.')

-----------------------------
o + alem de somar e junta as variaveis, mostrando um exemplo disso.

 var n1 = prompt ('Digite o primeiro numero:')
    var n2 = prompt ('Digite o Segundo e Ultimo numero:')
    var s = n1+n2
    alert ('A soma dos valores é:'+ s)

--------------------------
no html os comentarios sao feitos de outra forma:

<!--   -->
----------------
nop css, comentarios sao como no js
--------------------------------------------

O ASSUNTO DA AULA É A CONVERSAO DE VARIAVEIS, NUMBER PRA STRING E VICE VERSA

PRIMEIRO:

STRING PARA NUMERO, COM O: ]

Number.parseInt(n)

Caso queiramos um numero real, um numero com virgula, ele vai se chamar:

Number.parseFloat(n)
------------
agora tem uma forma mais simplioficada pra fazer é so inserir

Number(n)

e ele se vira pra identifica se é inteiro ou decimal
---------------------
porem vamos ver como colocar isso no nosso codigo

tem duas maneiras

A PRIMEIRA É

É CONVERTENDO DIRETO DA VARIAVEL DESSA FORMA:

 var n1 = Number(prompt ('Digite o primeiro numero:'))
    var n2 = Number(prompt ('Digite o Segundo e Ultimo numero:'))
    var s = n1+n2
    alert ('A soma dos valores é:' + s)
------------------------------------
agora a conversao de number para string

podemos usar : string(n) ou n.toString()

um exemplo mudando o codigo ja feito, ali embaixo no alert:

var n1 = Number(prompt ('Digite o primeiro numero:'))
    var n2 = Number(prompt ('Digite o Segundo e Ultimo numero:'))
    var s = n1+n2
    alert ('A soma dos valores é:' + s.toString()) ou 

	alert ('A soma dos valores é:' + String(s))
-------------------------------------------------------------

como fazer formataçao de novas Strings:

eu crio uma variuavel chama s e s esta com JavaScrip

var s = 'JavaScript'
exemplo:

> var s = 'JavaScript'
undefined
> s
'JavaScript'
>
> 'Eu estou estudando' + s
'Eu estou estudandoJavaScript'
> 'Eu estou estudando ' + s
'Eu estou estudando JavaScript'
> nome  = 'Gustavo'
'Gustavo'
> idade = 26
26
> nota = 7.8
7.8
> idade
26
> nota
7.8
> nome  = 'Gustavo'
'Gustavo'
> 'O Aluno' + nome + ' com ' + idade + ' anos tirou a nota ' + nota
'O AlunoGustavo com 26 anos tirou a nota 7.8'

---------------------------------------------

Porem no JAVASCRIP, tem uma forma melhor de fazer isso, pois aquele exemplo ali foi no nodejs

'Eu estou aprendendo s'  // nao faz interpolaçao
'Eu estou aprendendo' + s // usa concatenaçao e foi o que vimos ali em cima no exemplo de cima


Nas versoes recentes do js tem uma forma legal chamada de template string, assim:

`Eu estou aprendendo ${s}` a crase é o que delimita ser um templatestring, o sinal ali de sifrao seguido de chaves  aqui  é chamado de placeHolder

exemplo no nodejs:

> `O aluno ${nome} com ${idade} anos tirou a nota  ${nota}`
'O aluno Gustavo com 26 anos tirou a nota  7.8'

exemplo no js:

alert (`A soma, entre ${n1} e ${n2} é igual a ${s}` )
---------------------------------------
existem outras coisas a se fazer com strings

s.length: o length diz quantas letras tem a string

s.toUpperCase(): Joga tudo para letras Maiusculas

s.toLowerCase(): joga tudo pra letras minusculas

é exemplo: 

document.writeln(`Ola, ${nome}! Seu nome tem ${nome.length} letras.`)
        document.writeln(`Seu nome em maiusculas é ${nome.toUpperCase()}`)

o document.write escreve coisas na tela do site
-------------------------

é possivel  formatar numeros, por exemplo querer por a duas casas decimas uma da outra


no node js:

var n1 = 1543.5

exem:

> var n1 = 8678.9
undefined
> n1
8678.9
> n1.toFixed(23)
'8678.89999999999963620211929'

-------------------

se quiser virgula no lugar do ponto, fica assim:

n1.toFixed(23).replace('.', ',')

.replace('.', ',') - serve para  mudar o ponto por virgula ou vice e versa


o to fixed  é um metodo do number expecificamente

o toFixed serve pra ir algumas casas quantas casas vc quiser onde dentro dos parenteses ficam a quanrtidade de casas

----------------------------------------

é possivel colocar tags html nos javascripts
---------------------------------

macete avancadinho:

n1.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'}) - isso aqui serve pra mudar os valores, como pt br para euro ou dolar, ele converte

O CURRENCY É DINHEIRO

O TOLOCALE SIGNIFICA QUE É UMA STRING LOCALIZADA 

n1.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'})       
'R$ 8.678,90'

var s = 'javascrip'

s.toUpperCase() - deixa maiusculo, onde s é  a variavel
s.toLowerCase() - deixa minuusculo

sempre que for expor uma 

quebrar linha no js :  <br/>
-----------------------------------------------------------------------------------------------


OPERADORES:

ARITMETICOS: 
+ soma
- subtraçao
* multiplicaçao
/ divisao
% resto
5**2= 25% potencia, isso significa porcentasgem e os numeros signiofica 5 ao quadraodo

ATRIBUIÇAO:
RELACIONAIS 
LOGICOS
TERNARIOS
--------------	

PRECEDENCIA:

() PRIMEIRO PARENTE
** DEPOIS AS POTENCIAS
* / % DEPOIS ESSES ARITMETICOS
+ - POR ULTIMO ESSES DOS


var a = 5+ 3 =
var b = a % 5
var c = 5 * b **2
var d = 10 - a/2 
var e = 6 * 2 / d
var f = b % e + 4/e

-------------------------> 
var a = 5 +3
undefined
> a = 5+3
8
> var b = a % 5
undefined
> b = a % 5
3
> var c = 5 * b ** 2
undefined
> c = 5*b**2
45
> var d = 10 - a/2
undefined
> d = 10 - a/2
6
> var e = 6 * 2 / d
undefined
> e
> e = 6 * 2 / d
2
> var f = b % e + 4 / e
undefined
> f = b % e + 4 / e
3
---------------------------------------

AUTO ATRIBUIÇOES:

var n = 3

n = n+4, que  e ser escrita, como n+=4 no js so serve se a msm variavel mais  receber ele msm mais o 4, e assim sucessivamente pra todas as varieis

n = 7

e por ai vai

> b = a % 5
> var num = 8
undefined
> num
8
> num +=2
10
> num % 2
0
> num = 3
3
> num **= 2
9
>
------------------------------
INCREMENTO:

VAR X = 5
X = X+1
X = X-1

SIMPLIFICANDO AINDA MAIS:

FICA DE:

X = X+1 ---> X+=1 ---> X ++

------------------
a varivel vindfo antes, causa um acrescimo nas variaveis, significa que ta adicionando um aquela variavel todavez

--------------------------
OPERADORES (PART2)

> MAIOR
< MENO
>= MAIOR OU  IGUAL
<= MENOR E IGUAL
== IGUA
!= DIFERENTE

EX: 

> 8 > 4
true
> 4 >8
false
> 8 == 8
true
> 2 >= 9
false
>

OBS: é  possivel fazerr isso com variaveis
------------------------------ 

preço >= 200.50
idade < 18
curso == 'javascript'
n1 != n2 

ESSES VALOREA VAO SER SEMPRE UM VALÇOR BOOLEANDO DE SIM OU NAO

operaodr de itgualdade restrita: ===

5 === '5'
----------------------------------------------
OPERADORES LOGICOS

! ISSO É UMA NEGAÇAO, ELE É UNITARIO


&&  CONJUNÇAO E SIGNIFICA O "E", OPERADOR BINARIOO TEM DOIS VALORES LOGICOS UM DE CADA LADO, pra um resultado deiro, os dois valores precisam ser verdadeiro, caso apenas um seja falso, o resultado sera falso

EX:
TRUE && TRUE = true
true  && false = false

> var a = 9
undefined
> var b = 3
undefined
> true && true
true
> false && true
false
> true || false
true
> a > b && b % 2 == 0
false
> a > b || b%2 == 0
true
> a > b && b%2 == 0
false
> a > b && b%2 != 0
true
>

|| DISJUNÇAO E SIGNIFICA O "OU" , ja aqui basta apenas um ser verdade para o resulçtado srrt verdade tambem.

MESMA COISA
------------------
EM UMA EXPRESSAO, A OREM VAI SER SEMPRE PRIMEIRO OS OPERADORE4S ARITMETICOS, DEPOUIS OS RELACIONAIS E POR ULTIMO OS LOGICOS

---------------------------------------------------------
idade >= 15 && idade <= 17
estado == 'RJ' || estado == 'SP'
salario > 1500 && sexo != 'M'
------------------------------------------------
operador ternario: 

? e :

teste ? true :  false

ele se chama ternario pois tem tres parte, O bLOCO DE TESTE É UM TESTE LOGICO O DO MEIO É O QUE VAI ACONTECER SE O TESTE LOGICO FOR VERDADEIRO E O DO FINAL É O QUE VAI ACONTECER QUANDO O TESTE LOGICO FOR FALSO

EXEMPLO:

> let media
undefined

> media = 7
7

> media = 7.5
7.5

> media
7.5

> media > 7.5?'APROVADO':'REPROVADO'
'REPROVADO'

> media >= 7.5? 'APROVADO' : 'REPROVADO'
'APROVADO'

> media > 8.9? 'APROVADO' : 'REPROVADO'
'REPROVADO'

> media += 2.5
10

> media > 8.9? 'APROVADO' : 'REPROVADO'
'APROVADO'
>
----------------------

> var x = 8
undefined
> var res  = x % 2 == 0 ? 5:9

a variavel res vai receber 5 ou 9 e vai depender se e somente se  o resto de x divido por 2  for igual a 0

>
> var x = 8
undefined
> var res  = x % 2 == 0 ? 5:9
undefined
> x
8
> res
5
>

5 se for verdade e 9 se for falso

outros exemplos:

> var idade = 19
undefined
> var r = idade >= 18 ? 'MAIOR' : 'MENOR'
undefined
> r
'MAIOR'
>


Descoberta: pra da espaços nas coisas, entre concatenaçoes  é so clicar duas vezes na barra de espaço dentro das as aspas ou fora tambem, creio que isso sirva apenas no visual studio code, nao sei se é algo do js


--------------------------------------------------------
APREDENDO SOBRE O DOM:

DOM: DOCUMENT OBJECT MODEL

ARVORE DOM

MANIPULAR DOM
---------------------------------------------------------

ARVORE DOM: COMEÇA DA RAIZ E TD NA ARVOR3E DOM ESTA DENTRO DO WINDOW, E DENTRO DO WINDOW TEM VARIOS OUTROSA OBJETOS,

LOCATION

DOCUMENT -> TEM HTML -> HEAD E BODY E DENTRO DO BODY TEM UM H1, P, P, DIV,STRONG


EU POSSO SELECUIOANR ESSES ELEMENTOS PARA PODER NAVEGA NA ARVORE DOM

atraves de :

- Marca no caso de tags: tag name, 
getElementsByTagName()

ex:

 var corpo = window.document.body
        var p1 = window.document.getElementsByTagName('p')[1]

        /* esses conjuntinhos sao modificando o css dentro do javascript, modificou o estilo do paragrafo e depois modificou o estilo do corpo, tudo isso com a variavel corpo q esta recebendo window.document junto com a area na qual vc deseja que seja modificada*/

        p1.style.color = 'purple'
        corpo.style.background = 'blue'

        /* innertext mostra o texto do primeiro paragrafo porque em tagname eu especifiquei o paragrafo pois tem mais de um paragrafo, por isso aquele p dentro dos parenteses do getelement*/

        window.document.write(p1.innerHTML)


ID

Nome

Classe


querySelector(), Seletor, css
ex:

  var corpo = window.document.body
        var p1 = window.document.getElementsByTagName('p')[1]
        var d = window.document.getElementById('msg')
        /*é possivel modificar o id, apenas especificando como fiz abaixo d.innerText*/
        d.style.background = 'green'
        d.style.fontFamily = 'Arial, Helvetica, sans-serif'
        d.innerText = 'Estou aguardando'

        /*aquele # é representando o id*/
        var d = window.document.querySelector('div#msg')
        d.style.color = 'blue'

querySelectorAll()

OBS: tambem podemos selecionar por id, identificxa parag e usa o id, por nome, se tiver uma propriedade name, quando temos mais de um objeto na msm classe ou no msm nome, vamos usar por marca ou name


os párentrs vao ser os elementos de cima pára ops de baixo e os elementos child vao ser os elementos de baixo para COM os de cima.


HISTORY

exemplo de configuração div no css:

div#area 
        {
            font: normal 20pt Arial;
            background-color: black;
            color: white;
            width: 200px;
            height: 200px;
            line-height: 200px;
            text-align: center;

        }
        div{

-----------------------------------------------------
o que pode acontecer com a div :

eventos de mouse, o que pode acontecer ao mover o mouse na div

mouse enter
mousemove
mousedown
mouseup
click
mouseout
--------------------------
uma funçao em js é um conjunto de linhas que serao executadas so quando o evento ocorrer,

temos 10 linhas, essas 10 lnhas so vao ser disparadas quando o evento o correr e pra isso acontecer a primeira coisa a fazer é colocar dentro de um bloco, um bloco é os sinaisd de chaves, e esse bloco é nomeado pro uma function, os nomes das funçoes sao acoes que a gente poide fazer, e opcionalmente podemos colocar paramentros dentro dos parenteses dessas funcoes

function açao()
{

}

primeiro passo no codigo é dentro da div que vc qwuer quer seja feita essa açao , exemplo a seguir, mais vale exemplos do que explicaçoes

dentro da function vai acontecer o que eu quero q aconteca quando eu clicar  pois a funcao que eu queria é click

ex:  var a = window.document.getElementById('area') se estiver dentro da funçao vai serviur so para aquela funçao se estiver fora vai servir para qualquer outra funçao que for feita como se fosse um cabeçalho ou uma base um guia essas parada, posso n estar explicando tm bem a mim mesma mas eu sei que se eu anotar tambem os exemplos vou entender quando eu esquecer

ao fim eu colo o exemplo

EXEMPLO:

<div id="area" onclick="Clicar()" onmouseenter="entrar()" onmouseout="sair()">
        interaja...
        
    </div>
    <script>

        var a = window.document.getElementById('area')

        function Clicar()
        {
            
            a.innerText = 'Pegadinha do malandro!'
            a.style.background= 'blue'
        }
        function entrar()
        {
            a.innerText = 'Entrou!'
            a.style.background= 'black'
        }
        function sair() 
        {
            a.innerText = 'Saiu!'
            a.style.background= 'green'
        }



    </script>

AGORA GUANABARA VAI MOSTRAR UMA FORMA MENOS POLUIDA, UMA FORMA QUE DEVE SER MAIS CURTA:

essa nova forma é usando o:  
variavel.addEventListener()

EXEMPLO:


        var a = window.document.getElementById('area')
        a.addEventListener('click', clicar)
        a.addEventListener('mouseenter',entrar)
        a.addEventListener('mouseout', sair)

        function clicar()
        {
            
            a.innerText = 'Pegadinha do malandro!'
            a.style.background= 'blue'
        }
        function entrar()
        {
            a.innerText = 'Entrou!'
            a.style.background= 'black'
        }
        function sair() 
        {
            a.innerText = 'Saiu!'
            a.style.background= 'green'
        }

Como descobrir que seu javascript ta com algum erro, vai abrir o devtools e no cantuinho superior tem um xzinho clicando nele vai ver

---------------------------------------------------

AGORA GUANABARA TA EXPLICANDO COMO FAZER SOMAR E FAZER COM QUE O USUARUIO INTEJARA, BASICAMENTE UMA CALCULADORA DENTRO DO SITE, UM SITE DE CALCULADORA

tem como pegar por id e por name, tudo isso vai ter no exemPLO

se fossemos tentar somar sem declarar as variaveis numa funçao ele ia concatenar


descobrir depois porque nao foi assuim: res.innerHTML = s


EXEMPLO:

NESSE EXEMPLO TEM O CSS O HTML E A PARTE DO JS COMO EU TINHA DUYVIDAS DE COMO FAZER

<h1>Somando valores</h1>
	** ESSES IMPUTS FAZEM BLOQUINHOS E VC ESCOLHE O TAMANHO NO CSS **
    <input type="number" name="txtn1" id="txtn1"> +
    <input type="number" name="txtn2" id="txtn2">
    <input type="button" value="somar" onclick="somar()">
    
    <div id="res">=</div>
    <script>
        function somar()
        {
            var tn1 = window.document.getElementById ('txtn1')
            var tn2 = window.document.querySelector('input#txtn2')
            var res = window.document.getElementById('res')
            var n1 = Number(tn1.value)
            var n2 = Number(tn2.value)
            var s = n1 + n2
            res.innerHTML = `A Soma entre ${n1} e ${n2} é igual a <strong>${s}</strong>`
        }

    </script>


ESSE FOI O FINAL DO MODULO C
------------------------------------------------------------------------

MODULO D:

CONDIÇOES EM Js

SEQUENCIAS:  var n = 3 > n+=2 > window.alert(n) - aqui a ordem importa

CONDIÇOES?


A DEPENDER DE ALGUMA COISA  EU EXECUTO UM COMANDO A DEPENDER DE OUTRA COISA EU EXECUTO O OUTRO COMANDO

CHAMAMOS O PRIMEIRO DESVIO DE DESVIO CONDICIONAL

DESVIO CONDICIONAL:

if(condiçao)
{
	true

}
else
{
	false
}

existem dois tipos de condiçao

condiçao simples:

if(condiçao)
{
	true
}

Condiçao 

if(condiçao)
{
	true

}
else
{
	false
}
------------------------------------------------
` alguma coisa` as coisas no js entre essas crases normalmente é usado quando vc quer especifica uma variavel dentro de alguma frase nos parenteses de algum document ou algum console, como vou mostrar nas coisas a seguir.



    
var pais = 'Brasil'
console.log( `Vivendo em ${pais}`)
if (pais == 'Brasil')
{
    console.log('Voce é Brasileiro(a)!')
}
else 
{
    console.log ('Voce é Estrangeiro(a)!')
}
-----------------------------------
Meu desafio?:


<h1>Sistema de Nacionalizaçao</h1>

     Informe o Pais que Nasceu: <input type="text" name="pais" id="pais">
     <input type="button" value="Confirme"onclick="verificar()">

     <div id="res"></div>
     <script>
        
        function verificar()
        
        {
            var pais = window.document.getElementById ('pais')
            var res = window.document.getElementById('res')
            var nac = String(pais.Value)
            res.innerHTML = `<p>verifique abaixo sua nacionalidade.</p>`     
            
            if(pais.value == 'Brasil' || pais.value == 'brasil')
                {
                    res.innerHTML += `voce é Brasileiro`
                }
                else{
                  res.innerHTML += `voce é estrangeiro` 
                }  

obs: tive mtas probelmas com o pais.value, fiquei dias propcurando o erro e era ele

"pais.value == 'Brasil' || pais.value == 'brasil' "

essa é so a conversao de um  number para string creio ainda to tentando lembraa mas creio que seja: 

 var nac = String(pais.Value)

na hora de usar innerhtml ou innertext:

 quando é number usa = 

e quando é string usa-se concatenaçao +=

--------------------------------------------------
	CONDIÇOES ANINHADAS?



IF, ELSE IF ELSE

RESUMINDO SAO MTS ELSES IFS E IFS ELSES


- INDENTAÇAO

IF(COND1) 
{
	BLOCO1
}
ELSE
{
IF(COND2)
{
	BLOCO2
}
ELSE {}

}

para condiçoes diferentes a gente usa o ou ||

e para condicçoes iguais a gente o &&


exemplo: 

var agora = new Date()

var hora = agora.getHours()
console.log(`Agora sao exatamente ${hora} horas`)
 
if (hora < 12)
{   
console.log('Bom dia!!')
} 
else if (hora <= 18)
{
    console.log('Boa tarde!')
}
else
{
    console.log('Boa Noite!')
}

---------------------------------
condiçoes multiplas:

essa condiçao tem a possibilidade de outros valores alem do sim e nao, é possivel representa essa extrutura e testa valores.

para cada case tem que ter um break

switch(expressao) ele vai testa a expressao aqui em cima, se resulta no valor dois entt vai desvia pro case 2, vai executa os comandos que estao no valor 2 e depois vai ate o break
{
case valor 1:
break

case valor 2:
break

case valor 3:
break

default:
break 

}
------------------------
O MAIN É A CAIXA QUE EU QUERIA DROGA O MAIN É A CAIXA, VO ENCHE ISSO DE PALAVRA CHAVE PRA EU ACHAR DEPOIS QUE EU NAO LEMBRAR DE NOVO
--------------------------------------------

construindo o site exercicios

header vamos usar para ser a parte do cabeçalho do site, onde fica o h1

para o rodape vamos usar o footer, a tag é do html 5

e a area branca do meio, vamos usar uma section, poderia ser usada umaa section e uma articlo para a area do meio

e dentro dessa section, vamos colocar divs, que sao pequenas divisoes
-------------------------
border radius o raio da borda se fica redondinho iou nquadrado

da mesma forma que o style, é possuivel tambem cria um arquivo so pro js
------------------------------
colocando o const na frente das variaveis vai informar que aquela variavel o valor dela é constante e nao vai mudar
----------------- 
sempre que muidar a variavel dentro do codigo, para validar é nessario que imprima algo na tel anovamente, se nao vai pegar sempre o primeiro valor da variavel.
isso usando apenas o console.log

toda constante tem de ter um valor incial, e se usamos let n precisamos declrar
 porem ela n aparece quando validamos elas em algum luga 

const end = "avenida1"

let precodoleite = 9.5
let precodoqueijo = 30

console.log(`Preço do Leite: ${precodoleite}`)
console.log("Preço do Leite:", precodoleite)
console.log(`Preço do Queijo: ${precodoqueijo}`)
console.log("Preço do Queijo:", precodoqueijo)

precodoleite = 8
------------------------------------------------------------------
é possivel fazer contas dentro do console .log sem aspas  nenhuma e a conta vai ser feita

funcioina como uma calculadora

existem outras formas de concatena e juntar palavras umas nas outras

console.log(valor + "!")

o que estiver escrito no  valor vai juntar com o que eu coloquei entre as aspas

------------------------------------------------------------------
png 24 é um dos melhores formatos para web e tem no photoshop como exportar aaltomaticasmente parea web

para cada id ele ta criando uma variavel dentro do js

esses dois abaixo um mostra  data  originasl do seu computador e o outro mostra a hora original do seu pc cada um pega exatamente seus respectivos  coisinhos

let data = new Date()
let hora = data.getHours()

o onload foi onde ele fez a funcao funmciona e ele fez ela funcionar no body, eu posso escolher faco a funçao funcionar

para inserir as imagens dentro do function do js

no if  é so inserir dessa forma, vou colAR O CODIGO AQUI PRA FICA MAIS FACIL

pra mudar o estilo do dentro do codigo do java script tbm tem uma forma


document.body.style.background = '6f3619'

isso é pra mudar a cor dentro do codigo quando for de manha o fundo vai ter uma cor especifica e assim sucessivamente 


todo o exemplo:

function carregar()
{
let msg = window.document.getElementById('msg')
let img = window.document.getElementById('imagem')
let data = new Date()
let hora =  data.getHours()
msg.innerHTML = `Agora são: ${hora} horas.`


if (hora >=  0 && hora < 12)
{
    img.src = 'fotomanha.png'
    document.body.style.background = '#e7ba87'

    
}
else if (hora >= 12 && hora < 18)
{
    img.src = 'fototarde.png'
    document.body.style.background = '#6f3619'
   
}
else 
{
    img.src = 'fotonoite.png'
    document.body.style.background = '#022449'
    
}
}
]

esse codigo mostra a hora do sue comp e conforme for a hora muda de foto e muda de background

OBS: data.getHours() É QUE FAZ A DIFERENÇA POIS CASO VOCE QUEIRA INFORMA A HORA VOCE MESMO, VOCE PODE APAGANDO ESSE TRECHO E SUBSTITUINDO POR UM NUMERO

CORPO VAZIO:

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>Verificador de idade</title>
    
</head>
<body >
    <header>

        <h1>Verificador de idade</h1>


    
    </header>

    <section>
        <div >
            <p>Ano de nascimento:</p>
            inp
          
        </div>
        <div id="res">

            71992938027
           
        </div>
    </section>

    <footer>

        <p>&copy;Cursoemvideo</p>

    </footer>

    <script src="script.js"></script>
</body>
</html>
-------------------------------------------------------------------
o imput radio é uma marcaçao e ele vem junto do label, na verdade o label vem junto dele, 

data.getFullYear = fullyear aqui informa que ano estamos

Fano.value.lenght == 0  = aqui verifica se a caixa esta vazia

Fano.value > ano e aqui se o valor ta acima de ano

se no name do imput  a gente coloar nome diferentes na hora da marcaçao vai maraca os dois, mas é pra marca um dos dois, por isso no codigo vai ser usado nomes iguais, feito isso com os names iguais na hora de por no js é bom usar o "document.getElementsByName, e para saber qual é quaol o radsex 0 é a bolinha do masc e o radsex 1 é a do feminino,  colocarei cada exemplo aqui.
                

<p>&copy;Cursoemvideo</p> - isso é o rodape da pagina e isso vai dentro da tag "footer"

---------------------------------------------------------------------
como colocar imagens dinamicamente no js e html

1: no js

var img = document.createElement('img')
img.setAttribute('id', 'foto')

esse atribute é o id que foi criado para o img que foic riado anteriormente

é a mesma coisa que ir la no html e

no html:

<img id= 'foto'>


o appendchiold, adiciona um elemnto,significqa que apos os outros res ele vai adicionar um elemento

-----------------------------------------------
EXERC 15
-------

function verificar()
{   
    let data = new Date()
    let ano = data.getFullYear()
    let Fano = document.getElementById('txtano')
    let res = document.querySelector('div#res')
    

    if (Fano.value.lenght == 0 || Number(Fano.value) > ano)
    {
        res.innerText = 'Favor insira um Ano de nascimento para prosseguir.'
    }
    
    else
    {
        
        let fsex = document.getElementsByName('radsex')
        let idade = ano - Number(Fano.value)
        
        let genero = ''  
        

        var img = document.createElement('img')
        img.setAttribute('id', 'foto')
        

            if (fsex[1].checked)
            {
                genero = 'Masculino'  
                    if (idade >= 0 && idade < 10)
                    {
                    'criança'
                    img.setAttribute('src', 'criancamenino300.png')
                    }
                    else if (idade < 25)
                    {
                        'jovem'
                        img.setAttribute('src', 'jovemhomem300.1.png')
                    }
                    else if(idade < 50)
                    {
                        'adulto'
                        img.setAttribute('src', 'adultohomem300.png')
                    }
                    else 
                    {
                            'idoso'
                            img.setAttribute('src', 'idosohomem300.png')
                    }
                    res.innerHTML = `Favor insira um Ano de nascimento para prosseguir.`
                
            }
                else if (fsex[0].checked)
                {
                    genero = 'Feminino'
                        if (idade >= 0 && idade < 10)
                        {
                        'criança'
                        img.setAttribute('src', 'criancamenina300.png')
                        }
                        else if (idade < 25)
                        {
                            'jovem'
                            img.setAttribute('src', 'jovemmulher300.png')
                        }
                        else if(idade < 50)
                        {
                            'adulto'
                            img.setAttribute('src', 'adultomulher300.png')
                        }
                        else 
                        {
                                'idoso'
                                img.setAttribute('src', 'idosomulher300.png')
                        }
                        res.innerHTML = `Favor insira um Ano de nascimento para prosseguir.`
                        
                }
                
                    res.computedStyleMap.textttAlign = 'center'
                    res.innerHTML = `Pessoa do sexo ${genero} com ${idade} anos.`
                    res.appendChild(img)
                   
                   
                


    }
    


    
}
---------------------------------
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>Verificador de idade</title>
    
</head>
<body >
    <header>
        <h1>Verificador de idade</h1>
    </header>
    <section>
        <div >
            <p>Ano de nascimento:</p>
                <input type="number" name="txtano" id="txtano">
            </p>
            <p>Sexo:

                        
                <input type="radio" name="radsex" id="fem" checked>
                <label for="fem">Feminino</label>

                <input type="radio" name="radsex" id="masc" >
                <label for="masc">Masculino</label>

            </p>
            <p>
                <input type="button" value="Verificar" onclick="verificar()">
            </p>
        </div>

        <div id="res">
            Preencha os dados acima para ver o resultado!
        </div>

        
    </section>

    <footer>

        <p>&copy;Cursoemvideo</p>

    </footer>

    <script src="script.js"></script>
</body>
</html>
------------------------------------------------------------------------------------------
 ESTRUTURAS DE REPETIÇAO ou lacos


funcao ComerPizza()

function Comerpizza


partir do ponto a e chegue ao ponto b
---------------------
estruturas de controle:

1 seguencia
2 


-------------------------
 ou esse teste e verdadeito ou e faclço, se esse teste logico for verdade ele vai executa um bloco so que nao vai seguir desse bloco para o final ele vai voltar ele vai fazer um looping, ele vai fazer um laco, voltando para o losango ele vai testa dnv se a condiçao for verdadeira denovo ele vai executa e fazer outroçllaço e testando mais uma vez, ele vai fazer isso enquanto a condiçao for verdade, a partir do momento que a condiçao for mentira ele vai parar o looping

----------------------------------------------------------------------

quando eu escrevo um while eu tenho que colocar um bloco, e todo comando 

while ( tem fatia)
{
comerfatia()
}

----------------------------
var c = 1
while(c <= 10 )
{
    console.log(`Tudo bem?? ${c}`)
    c++
}
----------------------------
while: estrutura de repetiçao com teste logico no inicio
do while:estrutura de repetiçao com teste logico no final

----------------------------------

ESTRUTURA DE REPETIÇAO COM VARIAVEL DE CONTROLE:

INICIALIÇAO, TESTELOGICO E INCRMEEMTNO NESTA ORDEM

FOR (INICIO; TESTE; INCR){
EXECUTAR BLOCO
}
-----------------------------
o for é mais ultilizado pra maioria das vezes que eu sei o limite das minhas execuçoes
----------------------------------------------
o depurador da pra ver cada passo a passo do codigo que foi escrito, o visual studio tem um depurado que pode mostrar exatamente o passo a passo da resoluçao linah a linha letra a letra, contagem por contagem

video 24 de javascript
------------------------------------------------------------------- 

obs: vc pode nao ter erro de sintaxe mas vc pode sim ter erro de logica

-----------------------------------------------------
1. Alterar conteúdo dinamicamente
Mudar textos, títulos, parágrafos, imagens, links, etc.

Ex: Atualizar o nome do usuário após login sem recarregar a página.

🎨 2. Mudar estilos na hora
Trocar cor, tamanho, posição, visibilidade, etc.

Ex: Destacar um item ao clicar nele.

🎭 3. Mostrar/esconder elementos
Criar menus dropdown, modais (janelinhas que aparecem), tooltips.

Ex: Mostrar uma janela de “Termos de Uso” ao clicar num botão.

🖱️ 4. Reagir a eventos do usuário
Clique, digitação, rolagem, envio de formulário, foco, etc.

Ex: Validar campos de formulário conforme a pessoa digita.

🛠️ 5. Criar ou remover elementos na hora
Adicionar novos blocos, listas, cartões, mensagens.

Ex: Um botão “Adicionar item” em uma lista de tarefas.

🎯 6. Navegar entre páginas sem recarregar (SPA)
Usando DOM + fetch() ou frameworks, dá pra criar sites como apps.

Ex: Gmail, Facebook ou Instagram Web usam isso.

📦 7. Pegar dados de fora (APIs) e mostrar no site
Exibir clima, notícias, produtos de uma loja, usando APIs externas.

🎬 8. Animações e transições
Mover elementos, fazer sumir/devagar, girar, aumentar, etc.

Pode usar CSS + JS ou bibliotecas como GSAP.

🧠 9. Salvar dados no navegador
Guardar preferências, como tema claro/escuro, em localStorage.

🔐 10. Criar autenticação simples
Exibir ou esconder áreas do site dependendo se a pessoa está logada.

🗂️ 11. Filtrar, ordenar, e pesquisar conteúdo
Fazer uma lista de produtos que filtra conforme a pessoa digita.

Ex: Catálogo com busca instantânea.

📱 12. Tornar a página responsiva e adaptável
Detectar o tamanho da tela ou a orientação e mudar elementos na hora.
--------------------------------------------------

como sar ainda mais as horas:

let data = new Date();

console.log(data); // Mostra a data e hora completa
console.log(data.getFullYear()); // Ex: 2025
console.log(data.getMonth()); // Ex: 5 (junho — começa do zero!)
console.log(data.getDate()); // Dia do mês
console.log(data.getHours()); // Hora atual
console.log(data.getMinutes()); // Minutos atuais
----------------------------------------------------------
Cria um objeto data que representa a data e hora atual do sistema — ou seja, o exato momento em que você executa esse código.

Esse objeto tem vários métodos para pegar partes da data, como:

data.getHours() → retorna só a hora (de 0 a 23)

data.getMinutes() → retorna os minutos (de 0 a 59)

data.getSeconds() → retorna os segundos

data.getFullYear() → retorna o ano (ex: 2025)

data.getMonth() → retorna o mês (de 0 a 11!)

data.getDate() → retorna o dia do mês

🕐 E o que getHours() faz?
js
Copiar
Editar
let hora = data.getHours()
Esse método extrai só a hora atual do objeto Date.

Ele retorna um número entre 0 e 23:

0 → meia-noite

1 → 1h da manhã

12 → meio-dia

18 → 6h da tarde

23 → 11h da noite

🧠 Exemplo completo:
js
Copiar
Editar
let data = new Date()
let hora = data.getHours()
console.log(hora) // vai mostrar no console a hora real do seu sistema
✅ Usar getHours() é importante quando você quer:
Mudar o conteúdo ou estilo do site automaticamente conforme a hora real.

Exibir relógio ao vivo.

Criar páginas mais interativas e personalizadas (ex: “Boa noite, Sheila!” 🌙).
--------------------------------------------------------------------------

🔹 <p>Ano de nascimento:

ADICIONANDO UM BOTAIO DE NUMERO:

Um parágrafo simples, usado aqui para agrupar o rótulo e o campo de entrada de ano.

👉 <input type="number" name="txtano" id="txtano" min="0">
Vamos quebrar:

Atributo	O que faz
type="number"	Permite que o usuário digite apenas números (e aparece setinhas em navegadores)
name="txtano"	Nome do campo. Usado principalmente em formulários enviados para servidores
id="txtano"	Identificador único usado para acessar esse campo com JavaScript ou CSS
min="0"	Define o valor mínimo permitido, aqui evita anos negativos

----------------------------------------------------------

ADICIONANDO UM BOTAO DE SELEÇAO:

🔹 <p>sexo:

Outro parágrafo, agora com os botões de seleção do gênero.

👉 <input type="radio" name="radsex" id="masc" checked>
Atributo	Significado
type="radio"	Cria um botão de escolha única dentro de um grupo
name="radsex"	Liga os dois botões no mesmo grupo, para que só um possa ser selecionado
id="masc"	ID único, útil para rótulo (label) e JavaScript
checked	Define que este botão já começa selecionado por padrão

👉 <label for="masc">Masculino</label>
Conecta o texto "Masculino" ao botão com id masc.

Ajuda na acessibilidade: clicar no texto também ativa o botão.

👉 <input type="radio" name="radsex" id="fem">
Idêntico ao anterior, mas com id="fem", e sem o checked, então começa não selecionado.

👉 <label for="fem">Feminino</label>
Mesma ideia: conecta o texto "Feminino" ao botão com ID fem.

-----------------------------------------------------

ADICIOONANDO BOTAO PARA CLICR EFAZR ALGO:

🔹 <p><input type="button" value="Verificar" onclick="verificar()"></p>

Botão que o usuário clica para executar a verificação.

Atributo	Função
type="button"	Um botão simples, não envia formulário
value="Verificar"	Texto exibido dentro do botão
onclick="verificar()"	Ao clicar, chama a função JavaScript verificar() (definida no script.js)

-----------------------------------------------

FAZER O NVEGDOR IR A OUTRAS PGINAS NO JS:

📌 window.location.href = 'rocambole.html';
Essa linha está em JavaScript e faz o navegador ir para outra página.

window → representa a janela do navegador (todo o contexto da página).

location → é um objeto que guarda informações sobre o endereço atual da página.

href → é o endereço da URL atual. Ao atribuir um novo valor a ele (= 'rocambole.html'), você está dizendo:
👉 “Navegador, vá para esta outra página.”

É como se você dissesse:
“Mude a URL da janela para rocambole.html.”


No JavaScript, você pode usar o window.location.href para navegar para qualquer URL, seja ela:

Interna — dentro do seu próprio site, como "rocambole.html" ou "pagina2.html".

Externa — para outros sites, como "https://www.google.com" ou "https://openai.com".

Exemplo para ir a um link externo:
js
Copiar
Editar
window.location.href = 'https://www.google.com';
Exemplo para ir a um link interno:
js
Copiar
Editar
window.location.href = 'pagina-interna.html';
Outras formas de navegar com JavaScript:
Abrir em nova aba:

js
Copiar
Editar
window.open('https://www.google.com', '_blank');
Redirecionar sem salvar no histórico (substituir página atual):

js
Copiar
Editar
window.location.replace('https://www.google.com');
Resumindo:
window.location.href = 'URL'; → vai para essa URL, salvando a página atual no histórico.

window.location.replace('URL'); → vai para essa URL, sem salvar no histórico (usuário não consegue voltar).

window.open('URL', '_blank'); → abre a URL em uma nova aba ou janela.

Quer que eu te ajude a montar um exemplo completo com botões para links internos e externos?






Você disse:
window.location.replace('URL'); → vai para essa URL, sem salvar no histórico (usuário não consegue voltar).
 COMO FUNCIONA ESSE AKI, O USUARIO NA VOLTA A PAGINA INICIAL?


O ChatGPT disse:
Boa pergunta! Vou explicar direitinho.

Como funciona o window.location.replace('URL')?
Quando você usa window.location.replace('URL'), o navegador troca a página atual pela nova URL sem adicionar a página atual no histórico.

Ou seja, a página anterior não fica registrada no histórico do navegador.

Isso significa que, se o usuário clicar no botão "Voltar" do navegador, ele não vai voltar para a página original, porque ela foi "substituída".

Exemplos práticos:
Suponha que você esteja na página A.

Você faz window.location.replace('paginaB.html').

A página B abre, mas a página A é removida do histórico.

O botão "Voltar" do navegador não leva o usuário para a página A (pois ela não está no histórico).

Em vez disso, o navegador volta para a página anterior à página A, ou simplesmente não volta se não houver nada antes.

Em resumo
Com replace(): a navegação substitui a página atual — o usuário não pode voltar para ela com o botão "Voltar".

Com href (assign): a navegação adiciona a página atual no histórico — o usuário pode voltar para ela.

Se você quer garantir que o usuário não consiga voltar para a página inicial depois de ir para outra página (por exemplo, após um login ou algo assim), replace() é ideal.

Mas se você quer que o usuário tenha o caminho de volta, use window.location.href.

------------------------------------------
 USANDO MODAL PARA DAR ALERTAS E INSERIR DECISOES DENTRO DELES:

<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Confirmação com Modal</title>
  <style>
    #modal {
      display: none;
      position: fixed;
      top: 0; left: 0; right: 0; bottom: 0;
      background-color: rgba(0, 0, 0, 0.5);
      justify-content: center;
      align-items: center;
    }
    #modal-content {
      background-color: white;
      padding: 20px;
      border-radius: 10px;
      text-align: center;
    }
    #modal button {
      margin: 5px;
      padding: 8px 15px;
    }
  </style>
</head>
<body>

<button onclick="abrirModal()">Clique aqui</button>

<div id="modal">
  <div id="modal-content">
    <p>Você quer continuar?</p>
    <button onclick="resposta(true)">Sim</button>
    <button onclick="resposta(false)">Não</button>
  </div>
</div>

<script>
  function abrirModal() {
    document.getElementById('modal').style.display = 'flex';
  }

  function resposta(decisao) {
    document.getElementById('modal').style.display = 'none';
    if (decisao) {
      alert("Você escolheu SIM!");
    } else {
      alert("Você escolheu NÃO.");
    }
  }
</script>

</body>
</html>
-------------------------------------------

USANDO SWEETALERT PARA ESSES ALERTAS ERSTILIZADOS:

<script>
  document.getElementById('botao-confirmar').addEventListener('click', function () {
    Swal.fire({
      title: 'Tem certeza?',
      text: 'Você quer continuar?',
      icon: 'question',
      showCancelButton: true,
      confirmButtonText: 'Sim',
      cancelButtonText: 'Não'
    }).then((result) => {
      if (result.isConfirmed) {
        // Usuário clicou em "Sim"
        alert('Você confirmou!');
      } else {
        // Usuário clic


---------------------------------------------
TRATAMENTO DE CASO COM JS:

POSSIVEIS ERROS PARA AO CLICAR EM UM BOTAO



Sim, ao clicar no botão de voltar e executar a função que redireciona o usuário para outra página (window.location.href = 'index.html'), alguns erros podem acontecer. Eles não são tão comuns, mas é importante conhecer:

✅ 1. Elemento com ID errado ou inexistente
Se o botão com id="btn-rm" não existir no HTML, o document.getElementById('btn-rm') vai retornar null, e se você tentar usar isso (como se fosse um elemento), pode dar erro.

🔴 Erro: Cannot read properties of null
🔎 Exemplo de erro: tentar acessar um método ou propriedade de null.

✅ 2. Caminho do arquivo incorreto
Se o arquivo index.html não existir no local especificado, ou se o caminho estiver errado ('index.html' em vez de '../index.html' ou './index.html'), o navegador pode:

Carregar uma página em branco

Dar erro 404 (página não encontrada)

Ou simplesmente não sair da página atual

🔴 Erro perceptível: a navegação falha, e o usuário pode ficar preso.

✅ 3. Problemas de permissão ou segurança
Se você estiver rodando o HTML fora de um servidor web, apenas abrindo o arquivo no navegador (ex: file://), o redirecionamento pode ser bloqueado por segurança em alguns navegadores.

🔴 Erro: o navegador pode bloquear o redirecionamento, especialmente se envolver domínios diferentes.

✅ 4. Bloqueadores de pop-up ou extensões do navegador
Algumas extensões ou configurações de segurança podem impedir redirecionamentos ou bloquear o uso de window.location.

🔴 Erro: o navegador não executa o redirecionamento, ou aparece um aviso no console.

✅ 5. Sintaxe incorreta no JavaScript
Se houver algum erro de escrita (por exemplo, esquecer {} ou ;), o navegador nem executa o script, e nenhum redirecionamento vai acontecer.

🔴 Erro: erro de sintaxe (SyntaxError) que impede o script de funcionar.

✅ 6. Script externo não carregado corretamente
Se seu JavaScript estiver em um arquivo externo (script.js) e esse arquivo não for encontrado ou carregado com erro, o botão não vai funcionar.

🔴 Erro: nada acontece ao clicar no botão, e pode haver erro no console dizendo que o arquivo JS não foi carregado.

Se quiser, posso te ajudar a montar um tratamento que cobre esses casos. Quer fazer isso agora?

const { error } = require("console");

-------------------------------------------------

🔹 1. Função formatarNome(nome)


function formatarNome(nome) {   = → Declara uma função chamada formatarNome, que recebe um parâmetro chamado nome.

--------------

return nome = → Vai retornar (devolver) o resultado de várias transformações feitas no nome.

-----------------

.trim() = → Remove espaços em branco antes e depois da palavra (por exemplo, " Bahia " vira "Bahia").

------------------------------

.toLowerCase()  = → Converte todas as letras para minúsculas (por exemplo, "Bahia" vira "bahia").

-----------------------------
.replace(/\s+/g, "") =  → Remove todos os espaços internos, mesmo que sejam múltiplos (por exemplo, "são paulo" vira "sãopaulo")

----------------------
.normalize("NFD")  = → Transforma letras acentuadas em letras normais + acento separado (por exemplo, "é" vira "e" + acento).
---------------------------

.replace(/[\u0300-\u036f]/g, "");   =


→ Remove os acentos separados gerados pelo normalize, deixando só as letras básicas (ex: "são" vira "sao").
----------------------------------
Resultado final: transforma qualquer nome em uma versão simples, sem espaços, acentos ou maiúsculas.

--------------------------------------------------------------------------------------------------
🔹 2. Função verificarclima()

Essa é a função que pega a cidade digitada, busca a temperatura usando a API do OpenWeatherMap e exibe o resultado na tela com uma imagem.

async function verificarclima() {} = → Define uma função assíncrona (usando async) porque vai usar await com uma API externa.

-----------------------------------

const estado = document.getElementById("estadoInput").value.toLowerCase();  = → Pega o valor digitado no campo de texto com ID estadoInput e converte para minúsculas.

🟩 const estado = document.getElementById("estadoInput").value.toLowerCase();
Aqui está o que acontece, passo a passo:

const
Está criando uma variável constante, ou seja, você não poderá reatribuir ela depois (não poderá fazer estado = "outro valor").
👉 Isso não significa que o conteúdo não possa mudar com base no que o usuário digita — significa apenas que você não pode redefinir a variável depois.

document.getElementById("estadoInput")
Está acessando o campo de texto (input) que tem id="estadoInput" no HTML.

.value
Pega o que o usuário digitou dentro desse campo.

.toLowerCase()
Converte tudo para letra minúscula, para facilitar a comparação e evitar erros de digitação por causa de maiúsculas.


--------------------

  const nomeCidade = document.getElementById("cidadeNome");
  const temperatura = document.getElementById("temperatura");  = 
  const imagem = document.getElementById("imagemEstado");

Captura os elementos do HTML onde serão exibidos:

o nome da cidade,

a temperatura,

a imagem do estado correspondente.


----------------------------------
validação:

if (!cidadesValidas[estadoformatado]) 
  {
    alert("Estado não reconhecido. Tente digitar corretamente.");
    return;
  }


explicaça: → Se o nome digitado não estiver no dicionário (cidadesValidas), exibe um alerta e interrompe a função.

--------------------------------------------------------

🔸 Bloco try (tenta executar a busca) =

try { → Início do bloco que tenta buscar os dados da API. Se algo der errado, o catch tratará.

-----------------------------------
const apiKey = "96136474cd8886a4ebceb1c0be7ae411";  : → Sua chave de acesso à API do OpenWeatherMap (sem ela, a API não funciona).
  entt toda vez q eu for trabalhar com js e api eu vo precisa ter uyma chave, me explique isso e o try e cath


------------------------------------
const cidadeConsulta = cidadesValidas[estado];  :

→ Pega o valor correto da cidade no dicionário para consultar a API.

-------------------------------

    const url = `https://api.openweathermap.org/data/2.5/weather?q=${cidadeConsulta}&appid=${apiKey}&units=metric&lang=pt_br`;


→ Monta a URL completa para buscar o clima da cidade. Inclui:

o nome da cidade (q),

a chave da API (appid),

o tipo de unidade de temperatura (metric = Celsius),

o idioma da resposta (pt_br).

eu pego essa url em algum lugar ou eu mesma montaria?

------------------------------------
    const resposta = await fetch(url);

→ Faz a chamada para a API e espera a resposta (por isso usamos await).

perguntar sobre away fetch

--------------------------------
    const dados = await resposta.json();

→ Converte a resposta em JSON para poder acessar os dados.

---------------------------------------
    const temp = dados.main.temp;

→ Pega a temperatura atual da resposta e guarda em temp.

------------------------------------
    nomeCidade.textContent = `Clima em ${estado.charAt(0).toUpperCase() + estado.slice(1)}`;

→ Atualiza o texto com o nome da cidade, deixando a primeira letra em maiúscula.

---------------------------------------------------
    temperatura.textContent = `Temperatura: ${temp}°C`;

→ Mostra a temperatura formatada.

-----------------------------------
    imagem.alt = `Imagem do estado ${estadoInput}`;

 Define a descrição da imagem. ❗ATENÇÃO: aqui você usou estadoInput, mas essa variável não existe no seu JS. O correto seria:

----------------------------------------------------
  } catch (erro) {
    alert("Erro ao buscar os dados da API.");
    console.error(erro);
  }

→ Se algo falhar (ex: sem internet ou cidade inválida), mostra um alerta e imprime o erro no console.

----------------------------------------------------------------------

ANALISANDO:


function submit()
{
    const form = document.getElementById ('formlogin');
    const msg = document.getElementById ('msg');
    
    form.addEventListener 
    ('submit', function (e)
    {
    
        e.preventDefault(); //evita que recarregue

        const usuario = form.usuario.value.trim();
        const senha = form.senha.value;

        if(usuario === 'admin' && senha ===  '012345' )
            {

                msg.textContent = 'Login Realizado com Sucesso';
                msg.className = 'message success';

                window.location.href = 'cadastro.html';

            }
            else
            {
                msg.textContent = 'Usuario ou senha invalidos';
                msg.className= 'message Error';
     
            }

    }        
    );    
    


}
submit();




- NA FUNCAO ADDEVENTLISTENER AS CHAVES VEM DEPOIS DO PARENTESE
COM ACRESCIMO NOS PARENTES DO PONTO E VIRGULA NO FINAL SEMPRE.

-----------------------------------------
para validar cpf:


function validarCPF(cpf)
        {
            cpf = cpf.replace(/[^\d]+/g, ''); // remove tudo que nao é numero

            if (cpf.length !== 11 || /^(\d)\1{10}$/.test(cpf)) return false; // Verifica se tem 11 dígitos ou se todos os dígitos são iguais

            //Validação do primeiro dígito verificador
            let soma = 0; 

            // Multiplica os 9 primeiros dígitos por pesos decrescentes (10 a 2)
            for(let i = 0; i<9; i++) 
            {
                soma+= parseInt(cpf.charAt(i))* (10 - i);
            }


            //Calcula o primeiro dígito verificador
            let dig1 = 11 - (soma % 11);
            if(dig1 >= 10) dig1 = 0;

            // Verifica se o primeiro dígito calculado bate com o 10º dígito do CPF
            if(dig1 != parseInt(cpf.charAt(9))) return false;

            //Validação do segundo dígito verificador
            soma = 0; //// zera a soma

            //// Multiplica os 10 primeiros dígitos (já incluindo o 1º dígito verificador) por pesos decrescentes (11 a 2)
            for (let i = 0; i < 10; i++)
            {
                soma += parseInt(cpf.charAt(i)) * (11 - i);
            }

            // Calcula o segundo dígito verificador
            let dig2 = 11 - (soma % 11);
            if (dig2 >= 10) dig2 = 0;

            // Verifica se o segundo dígito calculado bate com o 11º dígito do CPF
            if (dig2 !== parseInt(cpf.charAt(10))) return false;


            
        }


-----------------------------------
ANOTSÇOERS DO QUER PERGUNTAR:

- O TRIM É NECESSRIO N FINAL PARA PEGAR QUALQUER FOPM DIGITADO EM FORMTO DE TEXTO? pode me d exemplos

- PORQUE TEM TRIM NO USUARIO E NAO TEM NO PASSWORD?

- COMO ASSIM APLICA CLSSE PARA ESTILIZAR NO CSS DIRETO DO JS? EU FIZ TESTE E NAO APARECEU ESTILIZADO

- e eu ja nao poderia fazer o estilo da mensagem textcontent sem incluir esse class name?

- como eu uso https?

- eu devo vlidar ios ddos tbm no backend? 
- como nao deixo a explosiçao de dados me de exemplo de como faço tudo isso no js

-como eu bloqueioi múltiplas tentativs no js

- e como eu uso captchas no js coo incluo tudo isso em meu js

- quero exemplos de onde  incluir prompts de perguntas e alertas no js para que o navegador com o navegador gravando por exemplo algumas informaçlies como nome para ficar mais interativo? quando o window prompt e window alert  e documentwrite são mais usados em exemplos da vida real em empresas e sites famosos?


---------------------------------------------------------------------
SOBRE PARSE INT:

🔎 Sem parseInt, o que aconteceria?
Você estaria tentando multiplicar strings, o que levaria a resultados incorretos ou NaN.

Por exemplo:

js
Copiar
Editar
"5" * 2 // 10 → até funciona porque JS faz coerção automática
"5a" * 2 // NaN → erro silencioso!
Usar parseInt() é mais seguro e explícito — você garante que está trabalhando com números reais, e não confia só no "jeitinho" do JavaScript.

- BASICAMENTE FUNCIONA COMO UM CONVERSOR DE CARACTERE PARA NUMEROS
























 





