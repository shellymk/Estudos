eu perdi as aulas anteriores entao foi commita a cada estudada que eu der, traumas,

refazendo a aula4
---------------------
scrip e  td mais, mecher webdevelopment

e td mais

/*pra colocar alertas no site, é bem legal*/
   
    alert ('ALERTA DE VIRUS, ALERTA DE VIRUS, ESTE COMPUTADOR ESTA COM SINTOMAS DE AMOR, A MELIANTE SE CHAMA ELIZABETH')

    confirm ('Esta gostando de javascrpt?')

    window.prompt('Qual seu nome?')

-----------------------------------
	VARIAVEIS:


NO JAVASCRIP, AS VARIAVEIS PODEM SER COLOCADAS COMO

VAR OU LET

ASPA DUPLA, APOSTOTROFO E CRASE, SAO AS FORMAS DE DELIMITAR AS VARIAVEIS


- PODE COMEÇA COM LETRAS SIFRAO OU UNDERLINE

- NAO PODEM COMEÇA COM NUMERO

- É POSSIVEL UISAR LETRAS OU NUM

- É POSSIVEL USAR ACENTO E SIMBOLOS

- NAO PODE TER ESPAÇO

-N PODE SER PALAVRA RESERVADA
------------------------------
NODEJS:

.exit fecha o nodejs

é possivel fzer contas no terminal e ele mostrar a resposta

> var idade = 26
undefined
> var salario =  3500
undefined
> var sexo = "F"
undefined
> idade
26
> salario
3500
> sexo
'F'
> .exit
PS C:\Users\Shelly> .exit
.exit : O termo '.exit' não é reconhecido como nome de cmdlet, função, arquivo de script ou programa operável. Verifique a grafia 
do nome ou, se um caminho tiver sido incluído, veja se o caminho está correto e tente novamente.
No linha:1 caractere:1
+ .exit
+ ~~~~~
    + CategoryInfo          : ObjectNotFound: (.exit:String) [], CommandNotFoundException       
    + FullyQualifiedErrorId : CommandNotFoundException
 
PS C:\Users\Shelly> node    
Welcome to Node.js v18.16.0.      
Type ".help" for more information.
> var n1=8
undefined
> var n2=559
undefined
> n1+n2
567
----------------------------
 tipos:

number: infiny, nan, sao derivados no number

Logicos ou boolean:

Strings : podem ser cpf, numero de cel, rg, porque alem de ter numeros estao compostos tambem por muitos caracteres especiais

null

undefined

object: array derivado de object

------------------------
typeof: isso que aqui basicamemte diz o tipo da variavel dentro do terminal node

exemplo:

> typeof n
'number'
> n="Google"
'Google'
> typeof n
'string'
> typeof 6
'number'
> typeof 6.5
'number'
> typeof "6.5"
'string'
> typeof []
'object'
> typeof {}
'object'
> typeof function(){}
'function'
> typeof undefined
'undefined'
> typeof NaN
'number'
> typeof infinity
'undefined'
> typeof Infinity
'number'
> typeof null
'object'
---------------------------------------------------------
TRATAMENTO DE DADOS:

pra jogar o que eu escrever na tela do pc, é so eu pegar  todo o prompt e colocar desta forma:


Let nome = window.prompt('Qual seu nome?')


onde a variavel nome recebe todo o prompt

depois disso, nos colocamos um alert pra fazer a junçao de tudo um pouco melhor e o nome poder aparecer na tela

pra juntar uma frase a uma variavel usamos o sinal de + que significa concatenaçao 

caso queira juntar mais alguma coisa a , é so concatena novamente colocar as aspas e escrever, assim:


   var nome = window.prompt('Qual o seu nome?')
 

   window.alert ('E um grande prazer te conhecer,' + nome + 'Espero que Goste do curso.')

-----------------------------
o + alem de somar e junta as variaveis, mostrando um exemplo disso.

 var n1 = prompt ('Digite o primeiro numero:')
    var n2 = prompt ('Digite o Segundo e Ultimo numero:')
    var s = n1+n2
    alert ('A soma dos valores é:'+ s)

--------------------------
no html os comentarios sao feitos de outra forma:

<!--   -->
----------------
nop css, comentarios sao como no js
--------------------------------------------

O ASSUNTO DA AULA É A CONVERSAO DE VARIAVEIS, NUMBER PRA STRING E VICE VERSA

PRIMEIRO:

STRING PARA NUMERO, COM O: ]

Number.parseInt(n)

Caso queiramos um numero real, um numero com virgula, ele vai se chamar:

Number.parseFloat(n)
------------
agora tem uma forma mais simplioficada pra fazer é so inserir

Number(n)

e ele se vira pra identifica se é inteiro ou decimal
---------------------
porem vamos ver como colocar isso no nosso codigo

tem duas maneiras

A PRIMEIRA É

É CONVERTENDO DIRETO DA VARIAVEL DESSA FORMA:

 var n1 = Number(prompt ('Digite o primeiro numero:'))
    var n2 = Number(prompt ('Digite o Segundo e Ultimo numero:'))
    var s = n1+n2
    alert ('A soma dos valores é:' + s)
------------------------------------
agora a conversao de number para string

podemos usar : string(n) ou n.toString()

um exemplo mudando o codigo ja feito, ali embaixo no alert:

var n1 = Number(prompt ('Digite o primeiro numero:'))
    var n2 = Number(prompt ('Digite o Segundo e Ultimo numero:'))
    var s = n1+n2
    alert ('A soma dos valores é:' + s.toString()) ou 

	alert ('A soma dos valores é:' + String(s))
-------------------------------------------------------------

como fazer formataçao de novas Strings:

eu crio uma variuavel chama s e s esta com JavaScrip

var s = 'JavaScript'
exemplo:

> var s = 'JavaScript'
undefined
> s
'JavaScript'
>
> 'Eu estou estudando' + s
'Eu estou estudandoJavaScript'
> 'Eu estou estudando ' + s
'Eu estou estudando JavaScript'
> nome  = 'Gustavo'
'Gustavo'
> idade = 26
26
> nota = 7.8
7.8
> idade
26
> nota
7.8
> nome  = 'Gustavo'
'Gustavo'
> 'O Aluno' + nome + ' com ' + idade + ' anos tirou a nota ' + nota
'O AlunoGustavo com 26 anos tirou a nota 7.8'

---------------------------------------------

Porem no JAVASCRIP, tem uma forma melhor de fazer isso, pois aquele exemplo ali foi no nodejs

'Eu estou aprendendo s'  // nao faz interpolaçao
'Eu estou aprendendo' + s // usa concatenaçao e foi o que vimos ali em cima no exemplo de cima


Nas versoes recentes do js tem uma forma legal chamada de template string, assim:

`Eu estou aprendendo ${s}` a crase é o que delimita ser um templatestring, o sinal ali de sifrao seguido de chaves  aqui  é chamado de placeHolder

exemplo no nodejs:

> `O aluno ${nome} com ${idade} anos tirou a nota  ${nota}`
'O aluno Gustavo com 26 anos tirou a nota  7.8'

exemplo no js:

alert (`A soma, entre ${n1} e ${n2} é igual a ${s}` )
---------------------------------------
existem outras coisas a se fazer com strings

s.length: o length diz quantas letras tem a string

s.toUpperCase(): Joga tudo para letras Maiusculas

s.toLowerCase(): joga tudo pra letras minusculas

é exemplo: 

document.writeln(`Ola, ${nome}! Seu nome tem ${nome.length} letras.`)
        document.writeln(`Seu nome em maiusculas é ${nome.toUpperCase()}`)

o document.write escreve coisas na tela do site
-------------------------

é possivel  formatar numeros, por exemplo querer por a duas casas decimas uma da outra


no node js:

var n1 = 1543.5

exem:

> var n1 = 8678.9
undefined
> n1
8678.9
> n1.toFixed(23)
'8678.89999999999963620211929'

-------------------

se quiser virgula no lugar do ponto, fica assim:

n1.toFixed(23).replace('.', ',')

.replace('.', ',') - serve para  mudar o ponto por virgula ou vice e versa


o to fixed  é um metodo do number expecificamente

o toFixed serve pra ir algumas casas quantas casas vc quiser onde dentro dos parenteses ficam a quanrtidade de casas

----------------------------------------

é possivel colocar tags html nos javascripts
---------------------------------

macete avancadinho:

n1.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'}) - isso aqui serve pra mudar os valores, como pt br para euro ou dolar, ele converte

O CURRENCY É DINHEIRO

O TOLOCALE SIGNIFICA QUE É UMA STRING LOCALIZADA 

n1.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'})       
'R$ 8.678,90'

var s = 'javascrip'

s.toUpperCase() - deixa maiusculo, onde s é  a variavel
s.toLowerCase() - deixa minuusculo

sempre que for expor uma 

quebrar linha no js :  <br/>
-----------------------------------------------------------------------------------------------


OPERADORES:

ARITMETICOS: 
+ soma
- subtraçao
* multiplicaçao
/ divisao
% resto
5**2= 25% potencia, isso significa porcentasgem e os numeros signiofica 5 ao quadraodo

ATRIBUIÇAO:
RELACIONAIS 
LOGICOS
TERNARIOS
--------------	

PRECEDENCIA:

() PRIMEIRO PARENTE
** DEPOIS AS POTENCIAS
* / % DEPOIS ESSES ARITMETICOS
+ - POR ULTIMO ESSES DOS


var a = 5+ 3 =
var b = a % 5
var c = 5 * b **2
var d = 10 - a/2 
var e = 6 * 2 / d
var f = b % e + 4/e

-------------------------> 
var a = 5 +3
undefined
> a = 5+3
8
> var b = a % 5
undefined
> b = a % 5
3
> var c = 5 * b ** 2
undefined
> c = 5*b**2
45
> var d = 10 - a/2
undefined
> d = 10 - a/2
6
> var e = 6 * 2 / d
undefined
> e
> e = 6 * 2 / d
2
> var f = b % e + 4 / e
undefined
> f = b % e + 4 / e
3
---------------------------------------

AUTO ATRIBUIÇOES:

var n = 3

n = n+4, que  e ser escrita, como n+=4 no js so serve se a msm variavel mais  receber ele msm mais o 4, e assim sucessivamente pra todas as varieis

n = 7

e por ai vai

> b = a % 5
> var num = 8
undefined
> num
8
> num +=2
10
> num % 2
0
> num = 3
3
> num **= 2
9
>
------------------------------
INCREMENTO:

VAR X = 5
X = X+1
X = X-1

SIMPLIFICANDO AINDA MAIS:

FICA DE:

X = X+1 ---> X+=1 ---> X ++

------------------
a varivel vindfo antes, causa um acrescimo nas variaveis, significa que ta adicionando um aquela variavel todavez

--------------------------
OPERADORES (PART2)

> MAIOR
< MENO
>= MAIOR OU  IGUAL
<= MENOR E IGUAL
== IGUA
!= DIFERENTE

EX: 

> 8 > 4
true
> 4 >8
false
> 8 == 8
true
> 2 >= 9
false
>

OBS: é  possivel fazerr isso com variaveis
------------------------------ 

preço >= 200.50
idade < 18
curso == 'javascript'
n1 != n2 

ESSES VALOREA VAO SER SEMPRE UM VALÇOR BOOLEANDO DE SIM OU NAO

operaodr de itgualdade restrita: ===

5 === '5'
----------------------------------------------
OPERADORES LOGICOS

! ISSO É UMA NEGAÇAO, ELE É UNITARIO


&&  CONJUNÇAO E SIGNIFICA O "E", OPERADOR BINARIOO TEM DOIS VALORES LOGICOS UM DE CADA LADO, pra um resultado deiro, os dois valores precisam ser verdadeiro, caso apenas um seja falso, o resultado sera falso

EX:
TRUE && TRUE = true
true  && false = false

> var a = 9
undefined
> var b = 3
undefined
> true && true
true
> false && true
false
> true || false
true
> a > b && b % 2 == 0
false
> a > b || b%2 == 0
true
> a > b && b%2 == 0
false
> a > b && b%2 != 0
true
>

|| DISJUNÇAO E SIGNIFICA O "OU" , ja aqui basta apenas um ser verdade para o resulçtado srrt verdade tambem.

MESMA COISA
------------------
EM UMA EXPRESSAO, A OREM VAI SER SEMPRE PRIMEIRO OS OPERADORE4S ARITMETICOS, DEPOUIS OS RELACIONAIS E POR ULTIMO OS LOGICOS

---------------------------------------------------------
idade >= 15 && idade <= 17
estado == 'RJ' || estado == 'SP'
salario > 1500 && sexo != 'M'
------------------------------------------------
operador ternario: 

? e :

teste ? true :  false

ele se chama ternario pois tem tres parte, O bLOCO DE TESTE É UM TESTE LOGICO O DO MEIO É O QUE VAI ACONTECER SE O TESTE LOGICO FOR VERDADEIRO E O DO FINAL É O QUE VAI ACONTECER QUANDO O TESTE LOGICO FOR FALSO

EXEMPLO:

> let media
undefined

> media = 7
7

> media = 7.5
7.5

> media
7.5

> media > 7.5?'APROVADO':'REPROVADO'
'REPROVADO'

> media >= 7.5? 'APROVADO' : 'REPROVADO'
'APROVADO'

> media > 8.9? 'APROVADO' : 'REPROVADO'
'REPROVADO'

> media += 2.5
10

> media > 8.9? 'APROVADO' : 'REPROVADO'
'APROVADO'
>
----------------------

> var x = 8
undefined
> var res  = x % 2 == 0 ? 5:9

a variavel res vai receber 5 ou 9 e vai depender se e somente se  o resto de x divido por 2  for igual a 0

>
> var x = 8
undefined
> var res  = x % 2 == 0 ? 5:9
undefined
> x
8
> res
5
>

5 se for verdade e 9 se for falso

outros exemplos:

> var idade = 19
undefined
> var r = idade >= 18 ? 'MAIOR' : 'MENOR'
undefined
> r
'MAIOR'
>


Descoberta: pra da espaços nas coisas, entre concatenaçoes  é so clicar duas vezes na barra de espaço dentro das as aspas ou fora tambem, creio que isso sirva apenas no visual studio code, nao sei se é algo do js


--------------------------------------------------------
APREDENDO SOBRE O DOM:

DOM: DOCUMENT OBJECT MODEL

ARVORE DOM

MANIPULAR DOM









 





